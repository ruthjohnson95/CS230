filename,test_name,test_id,issue_severity,issue_confidence,issue_text,line_number,line_range,more_info
Pyro4-4.71/examples/async/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",9,[9],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/async/client_batch.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",18,[18],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/async/client_callchain.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",22,[22],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/async/client_callchain.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,55,"[55, 56]",https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/async/client_callchain.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,67,"[67, 68]",https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/async/client_callchain.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,82,"[82, 83]",https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/async/client_callchain.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,94,"[94, 95]",https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/attributes/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",9,[9],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/attributes/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,70,[70],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/autoproxy/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",10,[10],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/autoreconnect/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",16,[16],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/batchedcalls/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",14,[14],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/batchedcalls/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,27,[27],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/batchedcalls/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,52,[52],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/batchedcalls/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,68,[68],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/benchmark/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",12,[12],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/benchmark/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,15,"[15, 16, 17]",https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/benchmark/connections.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",11,[11],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/blob-dispatch/client/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",21,[21],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/blob-dispatch/client/customdata.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,24,[24],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/blob-dispatch/listeners/customdata.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,24,[24],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/blob-dispatch/listeners/listener.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,19,[19],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/callback/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,32,[32],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/callcontext/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",36,[36],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/callcontext/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",64,[64],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/chatbox/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",31,[31],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/chatbox/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",34,[34],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/chatbox/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",35,[35],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/chatbox/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",43,[43],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/disconnects/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",16,[16],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/disconnects/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",52,[52],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/distributed-computing/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,29,[29],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/distributed-computing/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,29,[29],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/distributed-computing/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,32,[32],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/distributed-computing/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,32,[32],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/distributed-computing/workitem.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,15,[15],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/distributed-computing3/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,9,[9],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/distributed-computing3/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,9,[9],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/distributed-mandelbrot/client_asciizoom.py,start_process_with_a_shell,B605,LOW,HIGH,"Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",56,[56],https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html
Pyro4-4.71/examples/distributed-mandelbrot/client_asciizoom.py,start_process_with_partial_path,B607,LOW,HIGH,Starting a process with a partial executable path,56,[56],https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
Pyro4-4.71/examples/distributed-mandelbrot/normal.py,start_process_with_a_shell,B605,LOW,HIGH,"Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",23,[23],https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html
Pyro4-4.71/examples/distributed-mandelbrot/normal.py,start_process_with_partial_path,B607,LOW,HIGH,Starting a process with a partial executable path,23,[23],https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
Pyro4-4.71/examples/echoserver/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",14,[14],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/eventloop/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",14,[14],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/eventloop/server_multiplexed.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,27,[27],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/eventloop/server_threads.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,27,[27],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/exceptions/excep.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with pickle module.,1,[1],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/examples/extended-pickle/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",10,[10],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/filetransfer/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,26,[26],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/filetransfer/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,43,[43],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/filetransfer/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,60,[60],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/filetransfer/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,91,[91],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/filetransfer/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,94,[94],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/filetransfer/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",99,[99],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/filetransfer/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",107,[107],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/filetransfer/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",115,[115],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/filetransfer/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",123,[123],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/filetransfer/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",131,[131],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/flame/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",13,[13],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/futures/futures.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,15,"[15, 16]",https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/futures/futures.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,26,[26],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/gui_eventloop/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",13,[13],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/handshake/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",15,[15],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/handshake/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",16,[16],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/handshake/server.py,hardcoded_password_string,B105,LOW,MEDIUM,Possible hardcoded password: 'pancakes',6,"[6, 7, 8]",https://bandit.readthedocs.io/en/latest/plugins/b105_hardcoded_password_string.html
Pyro4-4.71/examples/http/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,2,[2],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/http/client.py,blacklist,B310,MEDIUM,HIGH,Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.,22,[22],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b310-urllib-urlopen
Pyro4-4.71/examples/hugetransfer/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",18,[18],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/hugetransfer/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,25,[25],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/hugetransfer/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,35,[35],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/hugetransfer/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,52,[52],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/itunes/itunescontroller.py,blacklist,B404,LOW,HIGH,Consider possible security implications associated with subprocess module.,2,[2],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess
Pyro4-4.71/examples/itunes/itunescontroller.py,subprocess_without_shell_equals_true,B603,LOW,HIGH,subprocess call - check for execution of untrusted input.,15,[15],https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
Pyro4-4.71/examples/itunes/itunescontroller.py,start_process_with_partial_path,B607,LOW,HIGH,Starting a process with a partial executable path,15,[15],https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
Pyro4-4.71/examples/itunes/itunescontroller.py,subprocess_without_shell_equals_true,B603,LOW,HIGH,subprocess call - check for execution of untrusted input.,19,[19],https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
Pyro4-4.71/examples/itunes/itunescontroller.py,start_process_with_partial_path,B607,LOW,HIGH,Starting a process with a partial executable path,19,[19],https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
Pyro4-4.71/examples/itunes/itunescontroller.py,subprocess_without_shell_equals_true,B603,LOW,HIGH,subprocess call - check for execution of untrusted input.,23,[23],https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
Pyro4-4.71/examples/itunes/itunescontroller.py,start_process_with_partial_path,B607,LOW,HIGH,Starting a process with a partial executable path,23,[23],https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
Pyro4-4.71/examples/itunes/itunescontroller.py,subprocess_without_shell_equals_true,B603,LOW,HIGH,subprocess call - check for execution of untrusted input.,27,[27],https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
Pyro4-4.71/examples/itunes/itunescontroller.py,start_process_with_partial_path,B607,LOW,HIGH,Starting a process with a partial executable path,27,[27],https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
Pyro4-4.71/examples/itunes/itunescontroller.py,subprocess_without_shell_equals_true,B603,LOW,HIGH,subprocess call - check for execution of untrusted input.,31,[31],https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
Pyro4-4.71/examples/itunes/itunescontroller.py,start_process_with_partial_path,B607,LOW,HIGH,Starting a process with a partial executable path,31,[31],https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
Pyro4-4.71/examples/itunes/itunescontroller.py,subprocess_without_shell_equals_true,B603,LOW,HIGH,subprocess call - check for execution of untrusted input.,35,[35],https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
Pyro4-4.71/examples/itunes/itunescontroller.py,start_process_with_partial_path,B607,LOW,HIGH,Starting a process with a partial executable path,35,[35],https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
Pyro4-4.71/examples/itunes/itunescontroller.py,subprocess_without_shell_equals_true,B603,LOW,HIGH,subprocess call - check for execution of untrusted input.,39,[39],https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
Pyro4-4.71/examples/itunes/itunescontroller.py,start_process_with_partial_path,B607,LOW,HIGH,Starting a process with a partial executable path,39,[39],https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
Pyro4-4.71/examples/itunes/itunescontroller.py,subprocess_without_shell_equals_true,B603,LOW,HIGH,subprocess call - check for execution of untrusted input.,43,"[43, 44, 45, 46, 47]",https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html
Pyro4-4.71/examples/itunes/itunescontroller.py,start_process_with_partial_path,B607,LOW,HIGH,Starting a process with a partial executable path,43,"[43, 44, 45, 46, 47]",https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
Pyro4-4.71/examples/itunes/remote.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",11,[11],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/maxsize/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",17,[17],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/messagebus/manytopics_publisher.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,23,[23],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/messagebus/manytopics_subscriber.py,start_process_with_a_shell,B605,HIGH,HIGH,"Starting a process with a shell, possible injection detected, security issue.",31,[31],https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html
Pyro4-4.71/examples/messagebus/messagebus/messagebus.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with cPickle module.,18,[18],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/examples/messagebus/messagebus/messagebus.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with pickle module.,20,[20],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/examples/messagebus/messagebus/messagebus.py,blacklist,B301,MEDIUM,HIGH,"Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",338,[338],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
Pyro4-4.71/examples/messagebus/publisher.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",18,[18],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/messagebus/publisher.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,25,[25],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/messagebus/subscriber.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",29,[29],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/messagebus/subscriber_manual_consume.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",42,[42],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/nameserverstress/stress.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,12,[12],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/nameserverstress/stress.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,15,[15],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/nameserverstress/stress.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,56,[56],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/nonameserver/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",12,[12],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/nonameserver/server.py,start_process_with_a_shell,B605,LOW,HIGH,"Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell",13,[13],https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html
Pyro4-4.71/examples/nonameserver/server.py,start_process_with_partial_path,B607,LOW,HIGH,Starting a process with a partial executable path,13,[13],https://bandit.readthedocs.io/en/latest/plugins/b607_start_process_with_partial_path.html
Pyro4-4.71/examples/resourcetracking/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",11,[11],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/resourcetracking/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,15,[15],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/resourcetracking/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,16,[16],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/resourcetracking/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",21,[21],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/robots/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,13,[13],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,14,[14],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,15,[15],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,17,[17],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,18,[18],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/client.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,44,[44],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/gameserver.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,184,[184],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/gameserver.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,190,[190],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/gameserver.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,191,[191],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/remote.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,45,[45],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/remote.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,46,[46],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/remote.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,47,[47],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/remote.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,49,[49],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/robots/robot.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,34,[34],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/ser_custom/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",44,[44],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/servertypes/server.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",48,[48],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/shoppingcart/clients.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,17,[17],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/shoppingcart/clients.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,21,[21],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/shoppingcart/clients.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,25,[25],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/ssl/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",61,[61],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/stockquotes-old/phase1/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,9,[9],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes-old/phase1/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,15,[15],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes-old/phase2/main.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",18,[18],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/stockquotes-old/phase2/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,12,[12],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes-old/phase2/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,18,[18],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes-old/phase2/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,34,[34],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes-old/phase3/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,14,[14],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes-old/phase3/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,20,[20],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes-old/phase3/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,38,[38],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes-old/phase3/viewer.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",23,[23],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/stockquotes/phase1/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,12,[12],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes/phase1/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,13,[13],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes/phase1/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,14,[14],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes/phase2/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,15,[15],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes/phase2/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,16,[16],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes/phase2/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,17,[17],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes/phase3/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,18,[18],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes/phase3/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,19,[19],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/stockquotes/phase3/stockmarket.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,20,[20],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/streaming/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",12,[12],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/thirdpartylib/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",11,[11],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/timeout/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,23,[23],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timeout/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,26,[26],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timeout/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,28,[28],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timeout/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,41,[41],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timeout/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,43,[43],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timeout/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,58,[58],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timeout/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,60,[60],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timeout/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,67,[67],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timeout/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,70,[70],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timeout/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,72,[72],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timeout/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,86,[86],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timeout/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,88,[88],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timezones/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",10,[10],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/timezones/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,27,[27],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timezones/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,31,"[31, 32]",https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timezones/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,35,[35],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/timezones/client.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,39,[39],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/unixdomainsock/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",10,[10],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/usersession/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",56,[56],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/usersession/client.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",66,[66],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/usersession/database.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,18,[18],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/usersession/database.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,22,[22],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/examples/usersession/database.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,38,[38],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/usersession/database.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,48,[48],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/examples/warehouse/phase1/person.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",20,[20],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/warehouse/phase1/person.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",26,[26],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/warehouse/phase2/person.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",20,[20],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/warehouse/phase2/person.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",26,[26],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/warehouse/phase2/visit.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",11,[11],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/warehouse/phase3/person.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",20,[20],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/examples/warehouse/phase3/person.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",26,[26],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/src/Pyro4/configuration.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with pickle module.,14,[14],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/src/Pyro4/configuration.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with dill module.,68,[68],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/src/Pyro4/core.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,909,[909],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/src/Pyro4/core.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,917,[917],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/src/Pyro4/core.py,blacklist,B302,MEDIUM,HIGH,Deserialization with the marshal module is possibly dangerous.,1783,[1783],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal
Pyro4-4.71/src/Pyro4/core.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,1916,[1916],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/src/Pyro4/naming.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,329,[329],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/src/Pyro4/naming.py,hardcoded_bind_all_interfaces,B104,MEDIUM,MEDIUM,Possible binding to all interfaces.,434,[434],https://bandit.readthedocs.io/en/latest/plugins/b104_hardcoded_bind_all_interfaces.html
Pyro4-4.71/src/Pyro4/naming_storage.py,hardcoded_sql_expressions,B608,MEDIUM,LOW,Possible SQL injection vector through string-based query construction.,190,[190],https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html
Pyro4-4.71/src/Pyro4/naming_storage.py,hardcoded_sql_expressions,B608,MEDIUM,LOW,Possible SQL injection vector through string-based query construction.,196,[196],https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html
Pyro4-4.71/src/Pyro4/nsc.py,blacklist,B322,HIGH,HIGH,"The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code. This is similar, though in many ways worse, then using eval. On Python 2, use raw_input instead, input is safe in Python 3.",65,[65],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b322-input
Pyro4-4.71/src/Pyro4/socketserver/threadpoolserver.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,187,[187],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/src/Pyro4/socketserver/threadpoolserver.py,try_except_pass,B110,LOW,HIGH,"Try, Except, Pass detected.",231,[231],https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
Pyro4-4.71/src/Pyro4/socketutil.py,hardcoded_bind_all_interfaces,B104,MEDIUM,MEDIUM,Possible binding to all interfaces.,95,[95],https://bandit.readthedocs.io/en/latest/plugins/b104_hardcoded_bind_all_interfaces.html
Pyro4-4.71/src/Pyro4/socketutil.py,try_except_pass,B110,LOW,HIGH,"Try, Except, Pass detected.",389,[389],https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
Pyro4-4.71/src/Pyro4/socketutil.py,try_except_pass,B110,LOW,HIGH,"Try, Except, Pass detected.",397,[397],https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
Pyro4-4.71/src/Pyro4/socketutil.py,try_except_pass,B110,LOW,HIGH,"Try, Except, Pass detected.",405,[405],https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
Pyro4-4.71/src/Pyro4/socketutil.py,try_except_pass,B110,LOW,HIGH,"Try, Except, Pass detected.",470,[470],https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
Pyro4-4.71/src/Pyro4/socketutil.py,try_except_pass,B110,LOW,HIGH,"Try, Except, Pass detected.",474,[474],https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
Pyro4-4.71/src/Pyro4/socketutil.py,try_except_pass,B110,LOW,HIGH,"Try, Except, Pass detected.",480,[480],https://bandit.readthedocs.io/en/latest/plugins/b110_try_except_pass.html
Pyro4-4.71/src/Pyro4/util.py,blacklist,B301,MEDIUM,HIGH,"Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",447,[447],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
Pyro4-4.71/src/Pyro4/util.py,blacklist,B301,MEDIUM,HIGH,"Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",451,[451],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
Pyro4-4.71/src/Pyro4/util.py,blacklist,B301,MEDIUM,HIGH,"Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",512,[512],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
Pyro4-4.71/src/Pyro4/util.py,blacklist,B301,MEDIUM,HIGH,"Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",515,[515],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
Pyro4-4.71/src/Pyro4/util.py,blacklist,B302,MEDIUM,HIGH,Deserialization with the marshal module is possibly dangerous.,548,[548],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal
Pyro4-4.71/src/Pyro4/util.py,blacklist,B302,MEDIUM,HIGH,Deserialization with the marshal module is possibly dangerous.,557,[557],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal
Pyro4-4.71/src/Pyro4/util.py,blacklist,B302,MEDIUM,HIGH,Deserialization with the marshal module is possibly dangerous.,561,[561],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal
Pyro4-4.71/src/Pyro4/util.py,blacklist,B302,MEDIUM,HIGH,Deserialization with the marshal module is possibly dangerous.,568,[568],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b302-marshal
Pyro4-4.71/src/Pyro4/util.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with cPickle module.,757,[757],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/src/Pyro4/util.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with pickle module.,759,[759],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/src/Pyro4/util.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,760,[760],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/src/Pyro4/util.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with dill module.,776,[776],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/src/Pyro4/utils/flame.py,exec_used,B102,MEDIUM,HIGH,Use of exec detected.,40,[40],https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html
Pyro4-4.71/src/Pyro4/utils/flame.py,blacklist,B307,MEDIUM,HIGH,Use of possibly insecure function - consider using safer ast.literal_eval.,45,"[45, 46, 47, 48, 49]",https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval
Pyro4-4.71/src/Pyro4/utils/flame.py,blacklist,B307,MEDIUM,HIGH,Use of possibly insecure function - consider using safer ast.literal_eval.,222,[222],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval
Pyro4-4.71/src/Pyro4/utils/httpgateway.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,240,[240],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/tests/PyroTests/test_core.py,hardcoded_tmp_directory,B108,MEDIUM,MEDIUM,Probable insecure usage of temp file/directory.,161,[161],https://bandit.readthedocs.io/en/latest/plugins/b108_hardcoded_tmp_directory.html
Pyro4-4.71/tests/PyroTests/test_httpgateway.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,67,[67],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/tests/PyroTests/test_httpgateway.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,79,[79],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/tests/PyroTests/test_ironpython.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with pickle module.,8,[8],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/tests/PyroTests/test_ironpython.py,blacklist,B301,MEDIUM,HIGH,"Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",22,[22],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b301-pickle
Pyro4-4.71/tests/PyroTests/test_naming.py,hardcoded_bind_all_interfaces,B104,MEDIUM,MEDIUM,Possible binding to all interfaces.,230,[230],https://bandit.readthedocs.io/en/latest/plugins/b104_hardcoded_bind_all_interfaces.html
Pyro4-4.71/tests/PyroTests/test_naming.py,hardcoded_bind_all_interfaces,B104,MEDIUM,MEDIUM,Possible binding to all interfaces.,252,[252],https://bandit.readthedocs.io/en/latest/plugins/b104_hardcoded_bind_all_interfaces.html
Pyro4-4.71/tests/PyroTests/test_serialize.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with pickle module.,11,[11],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/tests/PyroTests/test_serialize.py,hardcoded_tmp_directory,B108,MEDIUM,MEDIUM,Probable insecure usage of temp file/directory.,118,[118],https://bandit.readthedocs.io/en/latest/plugins/b108_hardcoded_tmp_directory.html
Pyro4-4.71/tests/PyroTests/test_serialize.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with pickletools module.,496,[496],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/tests/PyroTests/test_serialize.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with dill module.,602,[602],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/tests/PyroTests/test_serialize.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with dill module.,613,[613],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/tests/PyroTests/test_serialize.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with dill module.,759,[759],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
Pyro4-4.71/tests/PyroTests/test_serialize.py,hardcoded_tmp_directory,B108,MEDIUM,MEDIUM,Probable insecure usage of temp file/directory.,828,[828],https://bandit.readthedocs.io/en/latest/plugins/b108_hardcoded_tmp_directory.html
Pyro4-4.71/tests/PyroTests/test_serialize.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,899,[899],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/tests/PyroTests/test_serialize.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,900,[900],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/tests/PyroTests/test_server.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,1047,[1047],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/tests/PyroTests/test_server.py,assert_used,B101,LOW,HIGH,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,1094,[1094],https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
Pyro4-4.71/tests/PyroTests/test_socket.py,hardcoded_bind_all_interfaces,B104,MEDIUM,MEDIUM,Possible binding to all interfaces.,49,[49],https://bandit.readthedocs.io/en/latest/plugins/b104_hardcoded_bind_all_interfaces.html
Pyro4-4.71/tests/PyroTests/test_threadpool.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,25,[25],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/tests/PyroTests/test_threadpool.py,blacklist,B311,LOW,HIGH,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,33,[33],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
Pyro4-4.71/tests/PyroTests/testsupport.py,blacklist,B403,LOW,HIGH,Consider possible security implications associated with pickle module.,9,[9],https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b403-import-pickle
