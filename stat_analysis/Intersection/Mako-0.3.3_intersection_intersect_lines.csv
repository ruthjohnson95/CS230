filename,line_number,pylint_message,pylint_type,pylint_symbol,bandit_issue_text,bandit_issue_confidence,bandit_issue_severity
Mako-0.3.3/test/test_lookup.py,43,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_lookup.py,64,Access to a protected member _uri_cache of a client class,Category.W,protected-access,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_cache.py,65,"Exactly one space required after comparison
        assert t.render().strip() ==""callcount: [2]""
                                  ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_cache.py,230,"Exactly one space required after comma
        assert m.kwargs == {'type':'file','data_dir':module_base}
                                         ^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_cache.py,26,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,52,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,68,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,97,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,118,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,131,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,143,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,207,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,233,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,260,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,271,"Variable name ""t2"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,309,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,327,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,341,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,356,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,372,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_cache.py,389,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_template.py,351,Line too long (237/100),Category.C,line-too-long,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_template.py,352,Line too long (193/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_template.py,353,Line too long (281/100),Category.C,line-too-long,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_template.py,449,Line too long (131/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_template.py,468,Line too long (106/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_template.py,504,Line too long (105/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_template.py,504,"Exactly one space required after comma
        assert flatten_result(lookup.get_template(""a"").render(a=7,b=8)) == ""this is a this is b. 7, 8, 5""
                                                                 ^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_template.py,517,Line too long (105/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_template.py,517,"Exactly one space required after comma
        assert flatten_result(lookup.get_template(""a"").render(a=7,b=8)) == ""this is a this is b. 7, 8, 5""
                                                                 ^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_template.py,529,Line too long (111/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_template.py,529,"Exactly one space required after comma
        assert flatten_result(lookup.get_template(""a"").render(a=7,b=8,i='b')) == ""this is a this is b. 7, 8, 5""
                                                                 ^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_template.py,529,"Exactly one space required after comma
        assert flatten_result(lookup.get_template(""a"").render(a=7,b=8,i='b')) == ""this is a this is b. 7, 8, 5""
                                                                     ^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_template.py,560,Line too long (106/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_template.py,550,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_template.py,577,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_template.py,782,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_lru.py,60,"Unnecessary ""else"" after ""return""",Category.R,no-else-return,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,HIGH,LOW
Mako-0.3.3/test/test_lru.py,60,"Exactly one space required after comma
            if random.randint(1,4) == 1:
                               ^",Category.C,bad-whitespace,Standard pseudo-random generators are not suitable for security/cryptographic purposes.,HIGH,LOW
Mako-0.3.3/test/test_filters.py,12,Line too long (138/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_filters.py,21,Line too long (124/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_filters.py,38,Line too long (142/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_filters.py,48,"Exactly one space required around comparison
        assert t.render().strip()==""trim this string: some string to trim continue""
                                 ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_filters.py,55,"Exactly one space required around comparison
        assert t.render().strip()==""trim this string: some string to trim continue""
                                 ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_filters.py,62,Line too long (101/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_filters.py,73,"Exactly one space required around comparison
        assert t.render().strip()==""hi -&gt;there&lt;-""
                                 ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_filters.py,80,"Exactly one space required before comparison
        assert t.render().strip()  == ""&amp;lt;tag&amp;gt;this is html&amp;lt;/tag&amp;gt;""
                                   ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_filters.py,86,"Exactly one space required before comparison
        assert t.render().strip()  == ""&lt;tag&gt;this is html&lt;/tag&gt;""
                                   ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_filters.py,92,"Exactly one space required before comparison
        assert t.render().strip()  == ""&lt;tag&gt;this is html&lt;/tag&gt;""
                                   ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_filters.py,98,"Exactly one space required before comparison
        assert t.render().strip()  == ""&amp;lt;tag&amp;gt;this is html&amp;lt;/tag&amp;gt;""
                                   ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_filters.py,9,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,16,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,25,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,31,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,41,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,51,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,58,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,65,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,76,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,83,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,88,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,94,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,101,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,116,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,132,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,155,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,176,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,181,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,188,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,197,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,206,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_filters.py,251,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_inheritance.py,172,"Exactly one space required after comparison
        assert result_lines(collection.get_template('index').render()) ==  ['This is the base.',
                                                                       ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_inheritance.py,207,"Exactly one space required after comma
            assert result_lines(collection.get_template('index').render_unicode(x=5,y=10)) == [
                                                                                   ^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_inheritance.py,213,"Exactly one space required after comma
            assert result_lines(collection.get_template('index').render_unicode(x=5,y=10)) == [
                                                                                   ^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_inheritance.py,242,"Exactly one space required after comma
        assert result_lines(collection.get_template('index').render(x=5,y=10)) == [
                                                                       ^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,104,Line too long (116/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,116,Line too long (131/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,128,Line too long (131/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,140,Line too long (131/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,152,Line too long (131/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,175,Line too long (146/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,201,Line too long (133/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,217,Line too long (111/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,267,Trailing whitespace,Category.C,trailing-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,378,Line too long (137/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,666,Line too long (112/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,723,Line too long (112/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_namespace.py,524,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_namespace.py,729,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,45,Line too long (162/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_call.py,296,Line too long (115/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_call.py,381,Line too long (152/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_call.py,8,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,21,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,48,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,76,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,104,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,142,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,171,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,197,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,250,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,281,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,299,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,356,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_call.py,387,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_exceptions.py,83,Use of exec,Category.W,exec-used,Use of exec detected.,HIGH,MEDIUM
Mako-0.3.3/mako/codegen.py,85,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/mako/codegen.py,86,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/mako/codegen.py,97,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/mako/codegen.py,323,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/mako/codegen.py,445,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/mako/codegen.py,446,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/mako/codegen.py,536,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/mako/codegen.py,544,"Expression ""cacheargs[arg[1]] == int(eval(val))"" is assigned to nothing",Category.W,expression-not-assigned,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/mako/codegen.py,544,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_lexer.py,588,Line too long (114/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_lexer.py,588,Line too long (114/100),Category.C,line-too-long,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_lexer.py,26,Use of exec,Category.W,exec-used,Use of exec detected.,HIGH,MEDIUM
Mako-0.3.3/test/__init__.py,36,"Variable name ""t1"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,26,Line too long (112/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,26,"Exactly one space required after comma
        assert parsed.declared_identifiers == set(['a','b','c', 'g', 'h', 'i', 'u', 'k', 'j', 'gh', 'lar', 'x'])
                                                      ^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,26,"Exactly one space required after comma
        assert parsed.declared_identifiers == set(['a','b','c', 'g', 'h', 'i', 'u', 'k', 'j', 'gh', 'lar', 'x'])
                                                          ^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,45,Line too long (107/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,193,"Exactly one space required around comparison
        assert parsed.funcname=='foo'
                              ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,194,"Exactly one space required around comparison
        assert parsed.argnames==['a', 'b', 'c', 'd', 'e', 'f']
                              ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,200,"Exactly one space required around comparison
        assert parsed.funcname=='foo'
                              ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,201,"Exactly one space required around comparison
        assert parsed.argnames==['a', 'b', 'c', 'args', 'kwargs']
                              ^^",Category.C,bad-whitespace,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,217,Unnecessary parens after 'assert' keyword,Category.C,superfluous-parens,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,217,Unnecessary parens after 'assert' keyword,Category.C,superfluous-parens,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,217,Unnecessary parens after 'assert' keyword,Category.C,superfluous-parens,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,226,Unnecessary parens after 'assert' keyword,Category.C,superfluous-parens,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,226,Unnecessary parens after 'assert' keyword,Category.C,superfluous-parens,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,226,Unnecessary parens after 'assert' keyword,Category.C,superfluous-parens,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,238,Line too long (101/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,238,Line too long (101/100),Category.C,line-too-long,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,238,Line too long (101/100),Category.C,line-too-long,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,217,Use of eval,Category.W,eval-used,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,217,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,217,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,217,Use of eval,Category.W,eval-used,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,217,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,217,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,226,Use of eval,Category.W,eval-used,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,226,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,226,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,226,Use of eval,Category.W,eval-used,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,226,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,226,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,232,Use of eval,Category.W,eval-used,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,232,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,232,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,232,Use of eval,Category.W,eval-used,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,232,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,232,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,238,Use of eval,Category.W,eval-used,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,238,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,238,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,238,Use of eval,Category.W,eval-used,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,238,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,238,Use of eval,Category.W,eval-used,Use of possibly insecure function - consider using safer ast.literal_eval.,HIGH,MEDIUM
Mako-0.3.3/test/test_ast.py,193,Instance of 'FunctionDecl' has no 'funcname' member,Category.E,no-member,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,194,Instance of 'FunctionDecl' has no 'argnames' member,Category.E,no-member,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,200,Instance of 'FunctionDecl' has no 'funcname' member,Category.E,no-member,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_ast.py,201,Instance of 'FunctionDecl' has no 'argnames' member,Category.E,no-member,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/mako/template.py,373,Use of exec,Category.W,exec-used,Use of exec detected.,HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,253,Line too long (110/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_def.py,485,Line too long (158/100),Category.C,line-too-long,Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.,HIGH,LOW
Mako-0.3.3/test/test_def.py,113,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,130,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,153,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,178,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,197,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,218,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,256,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,286,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,304,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,325,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,389,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,409,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,424,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,451,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,488,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
Mako-0.3.3/test/test_def.py,505,"Variable name ""t"" doesn't conform to snake_case naming style",Category.C,invalid-name,"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.",HIGH,MEDIUM
